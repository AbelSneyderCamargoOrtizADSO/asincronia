const filtrar = x => x.name === "e-commerce"; // ACA REALIZAMOS EL CALLBACK PARA PASARLE AL .FILTER() Y QUE SOLO MUESTRE EL REPOSITORIO CON NOMBRE e-commerce

(async () => { // DEFINIMOS LA FUNCION ANONIMA AUTOEJECUTABLE
  
  // leer archivo json
  let response = await fetch("user.json"); // ACA CON EL FETCH REALIZAMO LA PETICION AL ARCHIVO USER.JSON Y ESTE LO ASIGNAMOS A LA VARIABLE RESPONSE PARA PONER EL AWAIT Y QUE SE ESPERE A LA RESPUESTA
  let user = await response.json(); // EN ESTA LINEA RECIBIMOS LA RESPUESTA DEL ARCHIVO USER.JSON Y QUE SE LEA COMO .JSON, LO ASIGNAMOS A LA VARIABLE TAMBIEN PARA QUE ESPERE LA RESPUESTA, EL AWAIT ASEGURA QUE EL CODIGO ESPERA A QUE LA PROMESA SE RESUELVA

  // consultar usuarios github
  let respuestGithub = await fetch(`https://api.github.com/users/${user.name}/repos`); // AQUI IGUAL, REALIZAMOS LA PRETICION AL API DE GITHUB Y EN LA RUTA INTERPOLAMOS EL NOMBRE DEL USUARIO PARA CONSULTAR SUS REPOSITORIOS, IGUAL DEFINIMOS A UNA VARIABLE Y USAMOS AWAIT PARA QUE ESPERE LA RESPUESTA

  let usuariogithub = await respuestGithub.json(); // EN ESTA LINEA RECIBIMOS LA RESPUESTA DEL API DE GITHUB Y QUE SE LEA COMO .JSON, LO ASIGNAMOS A LA VARIABLE TAMBIEN PARA QUE ESPERE LA RESPUESTA

  // usuariogithub DEVUELVE UN ARRAY CON OBJETOS, CADA OBJETO ES UN REPOSITORIO PUBLICO 

  usuariogithub.forEach(element => { // RECORRECOS EL ARRAY DE LOS REPOSITORIOS CON forEach
    if (element.name === "e-commerce") { // DEFINIMOS LA CONDICIONAL DE QUE SOLO MUESTRE POR CONSOLA EL REPOSITORIO QUE SE LLAME e-commerce
      console.log(element) // IMPRIMIMOS EL ELEMENTO
    }
  });

  // let data = usuariogithub.filter(filtro); // AQUI LO QUE HACEMOS ES EN VEZ DE USAR FOREACH PODEMOS DIRECTAMENTE USAR UN FILTER, EL AGREGAMOS EL METODO FILTER AL ARRAY Y LE PASAMOS EL CALLBACK DE LA PRIMERA LINEA PARA QUE MUESTRE SOLO EL REPOSITORIO BUSCADO

  // console.log(data) // IMPRIMIMOS DATA, ES DECIR EL ARRAY RESULTANTE DEL FILTRO

  // console.log(usuariogithub) 

})();


// CON PROMESAS
function pedirRepos() { // DEFINMOS LA FUNCION
    fetch("user.json") // REALIZAMOS LA PETICION AL ARCHIVO USER.JSON, EL FETCH RETORNA UNA PROMESA
        .then(respuesta => respuesta.json()) // CONSUMIMOS LA PROMESA DEL FETCH Y QUE DEVULVA EL RESULTADO EN JSON
        .then(usuario => { // RECIBIMOS LA PROMESA ANTERIOR, DONDE EL THEN RETORNA EL JSON
            let nombreUsuario = usuario.name; // ASIGNAMOS EL NOMBRE DEL USUARIO A UNA VARIABLE
            return fetch(`https://api.github.com/users/${nombreUsuario}/repos`); // REALIZAMOS LA PRETICION AL API DE GITHUB Y EN LA RUTA INTERPOLAMOS EL NOMBRE DEL USUARIO PARA CONSULTAR SUS REPOSITORIOS
        })
        .then(response => response.json()) // EL FETCH ANTERIOR RETORNA UNA PROMESA Y ESTA LA CONSUMIMOS EN ESTE THEN DONDE RETORNAMOS EN JSON
        .then(data => { // RECIBIMOS LOS DATOS 
            let filtrado = data.filter(filtrar); // REALIZAMOS EL FILTER PARA QUE SOLO MUESTRE EL REPOSITORIO CON EL NOMBRE, EL CALLBACK ESTA EN LA PRIMERA LINEA
            console.log(filtrado[0]); // IMPRIMIMOS EL RESULTADO, EL REPOSITORIO CON EL NOMBRE BUSCADO
        })
        .catch(error => { // CONSUMIMOS O RECIBIMOS EL ERROR
            console.error("Error:", error); // IMPRIMIMOS EL ERROR
        });
}
pedirRepos() // INVOCAMOS O LLAMAMOS LA FUNCION



// CON PROMESAS V2
function llamadaPorPromesa() { // DEFINIMOS LA FUNCION llamadaPorPromesa(9)
  let prom1 = new Promise((resolve, reject) => { // INSTANCIAMOS LA PROMESA Y LA ASIGNAMOS A LA VARIABLE prom1
    fetch("user.json").then(response => response.json()) // REALIZAMOS LA PETICION AL ARCHIVO USER.JSON Y LA RESPUESTA LA PARSEAMOS PARA QUE LE LEA COMO UN JSON
      .then(usua => { // RECIBIMOS LA RESPUESTA EN JSON 
        let user = usua.name; // LE ASIGNAMOS A LA VARIABLE USER EL NOMBRE SEL USUARIO, ESTE NOMBRE ES UNA PROPIEDAD DEL OBJETO LLAMADA NAME
        resolve(user) // CUANDO LA PROMESA SE RESUELVE DEVUELVE LA VARIABLE USER CON EL NOMBRE DEL USUARIO
      })
  })

  prom1.then(user => { // CONSUMIMOS LA PROMESA QUE RETORNA EL NOMBRE DEL USUARIO
    return new Promise((resolve, reject) => { // INSTANCIAMOS UNA NUEVA PROMESA, Y ESTA SERA RETORNADA
      fetch(`https://api.github.com/users/${user}/repos`).then(response => response.json()) // REALIZAMOS LA PETICION AL API DE GITHUB Y LA RESPUESTA LA PARSEAMOS PARA QUE SE LEA EN JSON
        .then(repos => { // CONSUMIMOS O RECIBIMOS LOS DATOS EN JSON
          let resultado = repos.filter(filtrar) // AQUI CON EL .FILTER REALIZAMOS EL FILTRADO POR NOMBRE DE REPOSITORIO Y LO ASIGNAMOS A LA VARIABLE RESULTADO
          resolve(resultado[0]) // CUANDO LA PROMESA SE RESUELVE DEVUELVE LA VARIABLE RESULTADO CON EL REPOSITORIO BUSCADO, ESTE REPOSITORIO ES UN OBJETO
        })
    })
  }).then(resultado => console.log(resultado)) // CONSUMIMOS O RECIBIMOS LA PROMESA, E IMPRIMIMOS POR CONSOLA EL REPOSITORIO BUSCADO 
}

llamadaPorPromesa(); // INVOCAMOS O LLAMAMOS LA FUNCION


